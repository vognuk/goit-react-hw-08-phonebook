{"version":3,"sources":["redux/auth/authActions.js","components/NotificationNumberExist/NotificationNumberExist.module.css","components/NotificationNumberExist/Animation.module.css","components/Contacts/ContactsAnimation.module.css","components/Heading/Heading.module.css","components/Heading/HeadingAnimation.module.css","components/Container/Container.module.css","redux/auth/authReducer.js","redux/auth/authSelectors.js","redux/contacts/contactsSelectors.js","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","components/NotificationNumberExist/index.jsx","utils/validator.js","components/Form/index.jsx","components/Contacts/index.jsx","components/Filter/index.jsx","components/Modal/index.jsx","views/ContactsView.js","components/Heading/index.jsx","components/Navigation/index.jsx","images/defaultAvatar.jpg","components/UserMenu/index.jsx","components/AuthHav/index.jsx","components/AppBar/index.jsx","components/Container/index.js","routes/routes.js","routes/PrivateRoute.js","routes/PublicRoute.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/Form/Form.module.css","redux/auth/authOperations.js","components/Contacts/Contacts.module.css","components/UserMenu/UserMenu.module.css","components/AuthHav/AuthNav.module.css","components/Filter/Filter.module.css","components/Modal/Modal.module.css"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","module","exports","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","combineReducers","getIsAuthenticated","state","auth","getUsername","getUseremail","getAllContacts","contacts","items","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","number","includes","String","initContactsRequest","initContactsSuccess","initContactsError","addContactRequest","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","changeFilter","axios","defaults","baseURL","operations","addContact","contact","dispatch","post","then","data","console","log","catch","massage","delContact","id","delete","fetchContacts","a","get","NotificationNumberExist","message","className","s","card","validatePhoneNumber","validator","isMobilePhone","Form","sameContact","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","some","setTimeout","reset","closeModal","alert","this","CSSTransition","in","timeout","classNames","Animation","unmountOnExit","form","onSubmit","label","TextField","input","type","placeholder","onChange","required","variant","maxLength","rule","button","disabled","checkContact","Button","color","Component","connect","selectors","initialValue","initContacts","authOperations","onDelete","TransitionGroup","component","list","map","elem","ContactsAnimation","item","onClick","mapDispatchToProps","onFilterChange","action","Modal","showModal","handleBackdropClick","currentTarget","window","addEventListener","handleKeyDown","removeEventListener","Overlay","children","ContactsView","toggleModal","code","style","marginTop","marginLeft","onChangeFilter","onClose","Heading","appear","HeadingAnimation","title","styles","link","display","textDecoration","padding","fontWeight","activeLink","authSelectors","to","exact","activeStyle","role","aria-label","avatar","width","height","borderRadius","onLogout","logOut","defaultAvatar","wrap","userName","alt","src","AuthNAv","container","header","justifyContent","alignItems","borderBottom","Container","redirectTo","routeProps","render","restricted","HomeView","lazy","RegisterView","LoginView","App","filterContacts","onGetCurretnUser","maxWidth","fallback","path","routes","getCurrentUser","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","document","getElementById","headers","common","Authorization","register","credentials","response","logIn","getState","persistedToken"],"mappings":"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","file":"static/js/main.d5d4a1b1.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"NotificationNumberExist_card__2AFsl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Animation_enter__2Kz6c\",\"enterActive\":\"Animation_enterActive__2IoT2\",\"exit\":\"Animation_exit__3AHNB\",\"exitActive\":\"Animation_exitActive__1it4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactsAnimation_enter__3juBU\",\"enterActive\":\"ContactsAnimation_enterActive__1JVR-\",\"exit\":\"ContactsAnimation_exit__2fbnl\",\"exitActive\":\"ContactsAnimation_exitActive__3b1Pt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Heading_title__3iIuS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"HeadingAnimation_appear__3u66l\",\"appearActive\":\"HeadingAnimation_appearActive__3XmE8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3aasn\"};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: setError,\r\n    [authActions.loginError]: setError,\r\n    [authActions.logoutError]: setError,\r\n    [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]: () => true,\r\n    [authActions.getCurrentUserSuccess]: () => true,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getCurrentUserError]: () => false,\r\n    [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    user,\r\n    isAuthenticated,\r\n    token,\r\n    error,\r\n});\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getUseremail = state => state.auth.user.email;\r\n\r\nexport default {\r\n    getIsAuthenticated,\r\n    getUsername,\r\n    getUseremail,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit'\r\n\r\nexport const getAllContacts = state => state.contacts.items;\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getContactsLength = state => {\r\n    const allContacts = getAllContacts(state);\r\n    return allContacts.length;\r\n};\r\n\r\nexport const getFilteredContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter(({ name, number }) =>\r\n            name.toLowerCase().includes(normalizedFilter) ||\r\n            String(number).includes(normalizedFilter)\r\n        );\r\n    },\r\n);\r\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const initContactsRequest = createAction('app/initStateRequest');\nexport const initContactsSuccess = createAction('app/initStateSuccess');\nexport const initContactsError = createAction('app/initStateError');\n\nexport const addContactRequest = createAction('form/addContactRequest');\nexport const addContactSuccess = createAction('form/addContactSuccess', (payload) => {\n    return {\n        payload,\n    }\n});\nexport const addContactError = createAction('form/addContactError');\n\nexport const delContactRequest = createAction('contact/delContactRequest');\nexport const delContactSuccess = createAction('contact/delContactSuccess');\nexport const delContactError = createAction('contact/delContactError');\nexport const filterContacts = createAction('contact/filterContacts');\n\nexport const changeFilter = createAction('contact/changeFilter');\n","import axios from 'axios'\r\nimport {\r\n    initContactsRequest,\r\n    initContactsSuccess,\r\n    initContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    delContactRequest,\r\n    delContactSuccess,\r\n    delContactError,\r\n} from './contactsActions'\r\n// import token from '../auth/authOperations';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com'\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n    dispatch(initContactsRequest());\r\n    await axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(initContactsSuccess(data)))\r\n        .catch(error => dispatch(initContactsError(error.massage)));\r\n};\r\n\r\nconst addContact = contact => dispatch => {\r\n    dispatch(addContactRequest());\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => console.log(data) || dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error.massage)));\r\n};\r\n\r\nconst delContact = id => dispatch => {\r\n    dispatch(delContactRequest());\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(delContactSuccess(id)))\r\n        .catch(error => dispatch(delContactError(error.massage)));\r\n};\r\n\r\nconst operations = {\r\n    addContact,\r\n    delContact,\r\n    fetchContacts,\r\n};\r\n\r\nexport default operations;\r\n","import React from \"react\"\nimport s from './NotificationNumberExist.module.css'\n\n\nconst NotificationNumberExist = ({ message }) => {\n    return (<p className={s.card}>{message}</p>);\n};\n\nexport default NotificationNumberExist;\n","import validator from 'validator'\n\nconst validatePhoneNumber = number => {\n    const isValidPhoneNumber = validator.isMobilePhone(number, \"uk-UA\");\n    return (isValidPhoneNumber);\n};\n\nexport default validatePhoneNumber;\n","import React, { Component } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\n// import Heading from '../Heading'\r\nimport NotificationNumberExist from '../NotificationNumberExist'\r\nimport Animation from '../NotificationNumberExist/Animation.module.css'\r\nimport s from './Form.module.css'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport validatePhoneNumber from '../../utils/validator'\r\nimport * as selectors from '../../redux/contacts/contactsSelectors'\r\nimport operations from '../../redux/contacts/contactsOperations'\r\nimport { Button, TextField } from '@material-ui/core'\r\n\r\nclass Form extends Component {\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    onChange: PropTypes.func,\r\n    onSubmit: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    sameContact: false,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n    console.log(this.state);\r\n\r\n    e.preventDefault();\r\n\r\n    if (this.props.contacts.some(({ number }) => number === contact.number)) {\r\n      this.setState({ sameContact: true });\r\n      setTimeout(() => {\r\n        this.setState({ sameContact: false });\r\n      }, 500);\r\n      return;\r\n    }\r\n\r\n    if (validatePhoneNumber(number) === true) {\r\n      this.setState({ name, number });\r\n      this.props.addContact(contact);\r\n      this.reset();\r\n      this.props.closeModal();\r\n    } else {\r\n      alert(\"Enter correct number, please\")\r\n    }\r\n\r\n  };\r\n\r\n  reset() {\r\n    this.setState({\r\n      name: '',\r\n      number: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { name, number, sameContact } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"heading\">\r\n          {/* <Heading /> */}\r\n\r\n          <CSSTransition\r\n            in={sameContact}\r\n            timeout={500}\r\n            classNames={Animation}\r\n            unmountOnExit\r\n          >\r\n            <NotificationNumberExist message=\"The contact is already exists.\" />\r\n          </CSSTransition>\r\n        </div>\r\n        <form className={s.form}\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <label className={s.label}>\r\n            {/* Name <span className={s.star}>&#42;</span> */}\r\n            <TextField\r\n              className={s.input}\r\n              type='text'\r\n              name='name'\r\n              placeholder='Enter the name'\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              required\r\n              variant=\"outlined\"\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            {/* Number <span className={s.star}>&#42;</span> */}\r\n            <TextField\r\n              className={s.input}\r\n              type='number'\r\n              name='number'\r\n              placeholder='+380'\r\n              value={number}\r\n              maxLength=\"13\"\r\n              onChange={this.handleChange}\r\n              required\r\n              variant=\"outlined\"\r\n            />\r\n            <span className={s.rule}>\r\n              {/* <span className={s.star}>&#42;</span> - obligatory fields. */}\r\n            </span>\r\n          </label>\r\n          <button\r\n            className={s.button}\r\n            disabled={false}\r\n            onSubmit={this.checkContact}\r\n          >\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Add contact\r\n              </Button>\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: selectors.getAllContacts(state),\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addContact: (contact) => dispatch(operations.addContact(contact)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\n\r\nimport s from './Contacts.module.css'\r\nimport ContactsAnimation from './ContactsAnimation.module.css'\r\nimport * as selectors from '../../redux/contacts/contactsSelectors'\r\nimport authOperations from '../../redux/auth/authOperations'\r\nimport { connect } from 'react-redux'\r\nimport DeleteTwoTone from '@material-ui/icons/DeleteTwoTone';\r\n\r\nconst Contacts = ({ contacts, onDelete, initContacts }) => {\r\n    return (<div>\r\n        <TransitionGroup\r\n            component=\"ul\"\r\n            className={s.list}\r\n        >\r\n            {contacts.map((elem, id) => (\r\n                <CSSTransition\r\n                    key={id}\r\n                    timeout={250}\r\n                    classNames={ContactsAnimation}\r\n                >\r\n                    <li className={s.item} key={id}>\r\n                        {`${elem.name}: ${elem.number}`}\r\n                        <button\r\n                            className={s.button}\r\n                            onClick={() => onDelete(elem.id)}\r\n                        >\r\n                            <DeleteTwoTone\r\n                                color=\"disabled\"\r\n                            />\r\n\r\n                        </button>\r\n                    </li>\r\n                </CSSTransition>\r\n            ))}\r\n        </TransitionGroup>\r\n    </div>\r\n    );\r\n};\r\n\r\nContacts.propTypes = {\r\n    onDelete: PropTypes.func.isRequired,\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        initialValue: selectors.getFilter(state),\r\n        initContacts: authOperations.fetchContacts,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        initContacts: () => dispatch(authOperations.fetchContacts()),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import React from 'react'\nimport s from './Filter.module.css'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport * as selectors from '../../redux/contacts/contactsSelectors'\nimport * as action from '../../redux/contacts/contactsActions'\nimport { TextField } from '@material-ui/core'\n\nconst Filter = ({ initialValue, onFilterChange }) => {\n\n  return (\n    <label className={s.label}>\n      <div >\n        <TextField\n          className={s.input}\n          type='text'\n          name='filter'\n          placeholder='Find contacts by name'\n          value={initialValue}\n          onChange={e => onFilterChange(e.target.value)}\n          variant=\"outlined\"\n        ></TextField>\n      </div>\n    </label >\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  filter: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  initialValue: selectors.getFilter(state),\n});\n\nconst mapDispatchToProps = {\n  onFilterChange: action.changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport s from \"./Modal.module.css\"\n\nclass Modal extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      })\n    ),\n    onClose: PropTypes.func,\n    children: PropTypes.element,\n  };\n\n  state = {\n    showModal: false,\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleBackdropClick = (e) => {\n    if (e.currentTarget === e.target) {\n      this.props.closeModal();\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className={s.Overlay}\n        onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { connect } from 'react-redux'\r\nimport * as selectors from '../redux/contacts/contactsSelectors'\r\nimport operations from '../redux/contacts/contactsOperations'\r\nimport Form from '../components/Form'\r\nimport Contacts from '../components/Contacts'\r\nimport Filter from '../components/Filter'\r\nimport Modal from '../components/Modal'\r\nimport { Button } from '@material-ui/core'\r\n\r\nclass ContactsView extends Component {\r\n    componentDidMount() {\r\n        this.props.initContacts();\r\n        window.addEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n\r\n    static propTypes = {\r\n        onDelete: PropTypes.func,\r\n        contacts: PropTypes.arrayOf(\r\n            PropTypes.exact({\r\n                id: PropTypes.string.isRequired,\r\n                name: PropTypes.string.isRequired,\r\n                number: PropTypes.string.isRequired,\r\n            })\r\n        ),\r\n        // onClick: PropTypes.func.isRequired,\r\n    };\r\n\r\n    state = {\r\n        showModal: false\r\n    };\r\n\r\n    toggleModal = () => {\r\n        this.setState(({ showModal }) => ({\r\n            showModal: !showModal,\r\n        }));\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.code === \"Escape\") {\r\n            this.setState({ showModal: false });\r\n        }\r\n    };\r\n\r\n    handleBackdropClick = (e) => {\r\n        if (e.currentTarget === e.target) {\r\n\r\n            this.setState(({ showModal }) => ({\r\n                showModal: !showModal,\r\n            }));\r\n        }\r\n    };\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    render() {\r\n        // const { contacts, name, number } = this.props;\r\n        return (<div>\r\n            <div style={{ marginTop: \"10px\", marginLeft: \"10px\" }}>\r\n                <Button\r\n                    onClick={this.toggleModal}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    New contact\r\n            </Button>\r\n            </div>\r\n            <br />\r\n            <Filter\r\n                value={this.props.initialValue}\r\n                onChangeFilter={this.props.filter}\r\n            />\r\n            <Contacts\r\n                contacts={this.props.contacts}\r\n                onDelete={this.props.delContact}\r\n            />\r\n\r\n            <Fragment>\r\n                {this.state.showModal &&\r\n                    <Modal\r\n                        onClose={this.toggleModal}\r\n                        closeModal={this.closeModal}\r\n                    >\r\n                        <Form closeModal={this.closeModal} />\r\n                    </Modal>}\r\n            </Fragment>\r\n        </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        contacts: selectors.getFilteredContacts(state),\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        initContacts: () => dispatch(operations.fetchContacts()),\r\n        delContact: id => dispatch(operations.delContact(id)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n","import React from \"react\"\nimport { CSSTransition } from 'react-transition-group'\nimport s from './Heading.module.css'\nimport HeadingAnimation from './HeadingAnimation.module.css'\n\nconst Heading = () => {\n    return (<CSSTransition\n        in={true}\n        appear={true}\n        classNames={HeadingAnimation}\n        timeout={500}\n        unmountOnExit\n    >\n        <h1 className={s.title}>Phonebook</h1>\n    </CSSTransition>\n    );\n};\n\nexport default Heading;\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { authSelectors } from '../../redux/auth'\r\nimport Heading from '../Heading'\r\n// import s from './Navigation.module.css'\r\n\r\nconst styles = {\r\n    link: {\r\n        display: 'inline-block',\r\n        textDecoration: 'none',\r\n        padding: 12,\r\n        fontWeight: 700,\r\n        color: '#2A363B',\r\n    },\r\n    activeLink: {\r\n        color: '#E84A5F',\r\n    },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n    <nav>\r\n        <NavLink\r\n            className=\"s.link\"\r\n            to=\"/\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}>\r\n            {/* Главная */}\r\n            <Heading />\r\n            <span role=\"img\" aria-label=\"Иконка приветствия\"></span>\r\n        </NavLink>\r\n        {isAuthenticated &&\r\n            <NavLink\r\n                to=\"/contacts\"\r\n                exact\r\n                style={styles.link}\r\n                activeStyle={styles.activeLink}\r\n            >\r\n                Contacts\r\n            </NavLink>\r\n        }\r\n    </nav>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/defaultAvatar.5831a849.jpg\";","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { authSelectors, authOperations } from '../../redux/auth'\r\nimport defaultAvatar from '../../images/defaultAvatar.jpg'\r\nimport s from './UserMenu.module.css'\r\nimport { Button } from '@material-ui/core'\r\n\r\nconst styles = {\r\n    avatar: {\r\n        width: '25px',\r\n        height: '25px',\r\n        borderRadius: '50%',\r\n    },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, email, onLogout }) => {\r\n    return (\r\n        <div className={s.wrap}>\r\n            {/* <div className={s.userBlock}> */}\r\n            <span className={s.userName}>\r\n                {name}\r\n                {/* ({email}) */}\r\n            </span>\r\n            <img\r\n                className={s.avatar}\r\n                alt=\"\"\r\n                src={avatar}\r\n                style={styles.avatar}\r\n            />\r\n            {/* </div> */}\r\n            <Button\r\n                className='s.button'\r\n                type='button'\r\n                onClick={onLogout}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n            >\r\n                Logout\r\n            </Button>\r\n        </div >\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    name: authSelectors.getUsername(state),\r\n    email: authSelectors.getUseremail(state),\r\n    avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = ({\r\n    onLogout: authOperations.logOut,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import { NavLink } from 'react-router-dom'\r\nimport s from './AuthNav.module.css'\r\n\r\nconst AuthNAv = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <NavLink\r\n                className={s.link}\r\n                to='/register'\r\n                exact\r\n            // activeStyle={s.activeLink}\r\n            >\r\n                Register\r\n        </NavLink>\r\n            <NavLink\r\n                className={s.link}\r\n                to='/login'\r\n                exact\r\n            // activeStyle={s.activeLink}\r\n            >\r\n                Login\r\n        </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthNAv;\r\n","import React from 'react'\r\nimport Navigation from '../Navigation'\r\nimport UserMenu from '../UserMenu'\r\nimport AuthNav from '../AuthHav'\r\nimport { authSelectors } from '../../redux/auth'\r\nimport { connect } from 'react-redux'\r\n// import s from './AppBar.module.css'\r\n\r\nconst styles = {\r\n    header: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        borderBottom: '1px solid #2A363B',\r\n    },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n    < div style={styles.header} >\r\n        <Navigation />\r\n        { isAuthenticated ? (<UserMenu />) : (<AuthNav />)}\r\n    </div >\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => <div className={s.container}>{children}</div>;\n\nexport default Container;\n","export default {\r\n    homeView: '/',\r\n    registerPage: '/register',\r\n    loginPage: '/login',\r\n    contactsPage: '/contacts'\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props =>\r\n            isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props =>\r\n            isAuthenticated && routeProps.restricted ? (\r\n                <Redirect to={redirectTo} />\r\n            ) : (\r\n                <Component {...props} />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { authOperations } from './redux/auth'\r\nimport ContactsView from './views/ContactsView'\r\nimport AppBar from './components/AppBar'\r\nimport Container from './components/Container'\r\nimport routes from './routes/routes'\r\nimport PrivateRoute from './routes/PrivateRoute'\r\nimport PublicRoute from './routes/PublicRoute'\r\n\r\nconst HomeView = lazy(() => import('./views/HomeView'));\r\nconst RegisterView = lazy(() => import('./views/RegisterView'));\r\nconst LoginView = lazy(() => import('./views/LoginView'));\r\n// const ContactsView = lazy(() => import('./views/ContactsView'));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurretnUser();\r\n    // this.props.initContacts();\r\n  }\r\n\r\n  filterContacts = e => {\r\n    this.props.filterContacts(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"sm\">\r\n        <AppBar />\r\n        <Suspense fallback={<p>Loading...</p>}> {/*fallback={<Preloader />}>*/}\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={routes.homeView}\r\n              component={HomeView} />\r\n            <PublicRoute\r\n              restricted\r\n              redirectTo='/contacts'\r\n              path={routes.loginPage}\r\n              component={LoginView}\r\n            />\r\n            <PublicRoute\r\n              restricted\r\n              redirectTo='/contacts'\r\n              path={routes.registerPage}\r\n              component={RegisterView}\r\n            />\r\n            <PrivateRoute\r\n              path={routes.contactsPage}\r\n              component={ContactsView}\r\n            />\r\n            <Redirect to={routes.homeView} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurretnUser: authOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit'\r\nimport {\r\n    initContactsRequest,\r\n    initContactsSuccess,\r\n    initContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    delContactRequest,\r\n    delContactSuccess,\r\n    delContactError,\r\n    changeFilter,\r\n} from './contactsActions'\r\n\r\nconst initialState = {\r\n    contacts: {\r\n        items: [],\r\n        filter: '',\r\n        error: '',\r\n    },\r\n};\r\n\r\nconst items = createReducer([], {\r\n    [initContactsSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n    [delContactSuccess]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [initContactsRequest]: () => true,\r\n    [initContactsSuccess]: () => false,\r\n    [initContactsError]: () => false,\r\n\r\n    [delContactRequest]: () => true,\r\n    [delContactSuccess]: () => false,\r\n    [delContactError]: () => false,\r\n\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(initialState.contacts.filter, {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n});\r\n\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport contactsReducer from './contacts/contactsReducer'\r\nimport loading from './contacts/contactsReducer'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist'\r\nimport { authReducer } from './auth'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [\r\n                FLUSH,\r\n                REHYDRATE,\r\n                PAUSE,\r\n                PERSIST,\r\n                PURGE,\r\n                REGISTER,\r\n            ],\r\n        },\r\n    }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: contactsReducer,\r\n    },\r\n    loading,\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport store from './redux/store'\r\nimport 'fontsource-roboto';\r\n// import 'modern-normalize/modern-normalize.css';\r\n// import './styles/base.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store.store}>\r\n    <PersistGate loading={null} persistor={store.persistor}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2mZp7\",\"label\":\"Form_label__1wSHO\",\"input\":\"Form_input__38_jR\",\"button\":\"Form_button__3s6za\"};","import axios from 'axios'\r\nimport authActions from './authActions'\r\n\r\n// axios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = credentials => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n    try {\r\n        const response = await axios.post('/users/signup', credentials);\r\n        token.set(response.data.token);\r\n        dispatch(authActions.registerSuccess(response.data));\r\n    } catch (error) {\r\n        console.log(\"Добавить уведомление об ошибке регистрации и ее причине(из ответа сервера)\", error)\r\n        dispatch(authActions.registerError(error.message));\r\n    }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = credentials => async dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n\r\n    try {\r\n        const response = await axios.post('/users/login', credentials);\r\n        token.set(response.data.token);\r\n        dispatch(authActions.loginSuccess(response.data));\r\n    } catch (error) {\r\n        console.log(\"Добавить уведомление об ошибке логина и ее причине(из ответа сервера)\", error);\r\n        dispatch(authActions.loginError(error.message));\r\n    }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = () => async dispatch => {\r\n    dispatch(authActions.logoutRequest());\r\n    try {\r\n        await axios.post('/users/logout');\r\n        token.unset();\r\n        dispatch(authActions.logoutSuccess());\r\n    } catch (error) {\r\n        console.log(\"Добавить уведомление об ошибке выхода и ее причине(из ответа сервера)\", error);\r\n        dispatch(authActions.logoutError(error.message));\r\n    }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken },\r\n    } = getState();\r\n\r\n    if (!persistedToken) {\r\n        return;\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    dispatch(authActions.getCurrentUserRequest());\r\n\r\n    try {\r\n        const response = await axios.get('/users/current');\r\n        dispatch(authActions.getCurrentUserSuccess(response.data));\r\n    } catch (error) {\r\n        dispatch(authActions.getCurrentUserError(error.message));\r\n    }\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__31ZXR\",\"item\":\"Contacts_item__3MeDX\",\"button\":\"Contacts_button__1S_0B\",\"item-enter\":\"Contacts_item-enter__3kxG_\",\"item-enter-active\":\"Contacts_item-enter-active__32sa_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"UserMenu_wrap__2UQUq\",\"avatar\":\"UserMenu_avatar__2cMk7\",\"userName\":\"UserMenu_userName__WV3sw\",\"button\":\"UserMenu_button__2QHge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthNav_container__16vT6\",\"link\":\"AuthNav_link__1sy3d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2lC1i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__dOvDZ\",\"Modal\":\"Modal_Modal__1a7yQ\"};"],"sourceRoot":""}