{"version":3,"sources":["views/LoginView.js"],"names":["styles","form","width","label","display","flexDirection","marginBottom","LoginView","state","email","password","handleChange","target","name","value","setState","handleSubmit","e","preventDefault","props","onLogin","this","onSubmit","style","autoComplete","type","placeholder","onChange","variant","color","Component","mapDispatchToProps","authOperations","logIn","connect"],"mappings":"kPAKMA,EAAS,CACXC,KAAM,CACFC,MAAO,KAEXC,MAAO,CACHC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIhBC,E,4MACFC,MAAQ,CACJC,MAAO,GACPC,SAAU,I,EAGdC,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAC9B,EAAKC,SAAL,eAAiBF,EAAOC,K,EAG5BE,aAAe,SAAAC,GACXA,EAAEC,iBAEF,EAAKC,MAAMC,QAAQ,EAAKZ,OAExB,EAAKO,SAAS,CAAEF,KAAM,GAAIJ,MAAO,GAAIC,SAAU,M,4CAGnD,WAAU,IAAD,EACuBW,KAAKb,MAAzBC,EADH,EACGA,MAAOC,EADV,EACUA,SAEf,OACI,gCACI,uCAEA,uBACIY,SAAUD,KAAKL,aACfO,MAAOvB,EAAOC,KACduB,aAAa,MAHjB,UAKI,uBAAOD,MAAOvB,EAAOG,MAArB,SAEI,cAAC,IAAD,CACIsB,KAAK,QACLZ,KAAK,QACLC,MAAOL,EACPiB,YAAY,SACZC,SAAUN,KAAKV,iBAIvB,uBAAOY,MAAOvB,EAAOG,MAArB,SAEI,cAAC,IAAD,CACIsB,KAAK,WACLZ,KAAK,WACLC,MAAOJ,EACPgB,YAAY,WACZC,SAAUN,KAAKV,iBAKvB,cAAC,IAAD,CACIc,KAAK,SACLG,QAAQ,YACRC,MAAM,UAHV,6B,GArDIC,aAkElBC,EAAqB,CACvBX,QAASY,IAAeC,OAGbC,sBAAQ,KAAMH,EAAdG,CAAkC3B","file":"static/js/4.1f5e840f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { authOperations } from '../redux/auth'\r\nimport { Button, TextField } from '@material-ui/core'\r\n\r\nconst styles = {\r\n    form: {\r\n        width: 320,\r\n    },\r\n    label: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginBottom: 15,\r\n    },\r\n};\r\n\r\nclass LoginView extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n    };\r\n\r\n    handleChange = ({ target: { name, value } }) => {\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        this.props.onLogin(this.state);\r\n\r\n        this.setState({ name: '', email: '', password: '' });\r\n    };\r\n\r\n    render() {\r\n        const { email, password } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n\r\n                <form\r\n                    onSubmit={this.handleSubmit}\r\n                    style={styles.form}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <label style={styles.label}>\r\n                        {/* Почта */}\r\n                        <TextField\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={email}\r\n                            placeholder=\"e-mail\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n\r\n                    <label style={styles.label}>\r\n                        {/* Пароль */}\r\n                        <TextField\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            placeholder=\"password\"\r\n                            onChange={this.handleChange}\r\n\r\n                        />\r\n                    </label>\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Enter\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onLogin: authOperations.logIn,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginView);\r\n"],"sourceRoot":""}